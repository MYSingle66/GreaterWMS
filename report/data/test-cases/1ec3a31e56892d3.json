{"uid":"1ec3a31e56892d3","name":"登录测试用例1","fullName":"testcases.test_login.TestLogin#test_01_login","historyId":"8912f2224b7720b95769e7802c58431c","time":{"start":1667995086222,"stop":1667995101940,"duration":15718},"description":"\n        lp.get_except_result()实际结果\n        后面的是预期结果\n        :return:\n        ","descriptionHtml":"<pre><code>    lp.get_except_result()实际结果\n    后面的是预期结果\n    :return:\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert '退出登入' == '退出登入1'\n  - 退出登入1\n  ?     -\n  + 退出登入","statusTrace":"self = <test_login.TestLogin object at 0x0000024970AFB710>\ncaseinfo = {'name': '登录账户02', 'password': 123456, 'result': '退出登入1', 'username': 'Single'}\n\n    @allure.severity('critical')  # 用例等级\n    @allure.title('登录测试用例1')  # 测试用例标题\n    @pytest.mark.parametrize(\"caseinfo\",read_yaml2(os.path.join(data_path,'logindata.yaml')))\n    def test_01_login(self,caseinfo):\n        \"\"\"\n        lp.get_except_result()实际结果\n        后面的是预期结果\n        :return:\n        \"\"\"\n        lp = LoginPage()\n        lp.login_xuxin(caseinfo['username'],caseinfo['password'])\n        print(lp.get_except_result())\n        try:\n            assert lp.get_except_result() == caseinfo['result']\n        except AssertionError as e:\n            log.info(\"断言错误\")\n>           raise e\n\ntestcases\\test_login.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_login.TestLogin object at 0x0000024970AFB710>\ncaseinfo = {'name': '登录账户02', 'password': 123456, 'result': '退出登入1', 'username': 'Single'}\n\n    @allure.severity('critical')  # 用例等级\n    @allure.title('登录测试用例1')  # 测试用例标题\n    @pytest.mark.parametrize(\"caseinfo\",read_yaml2(os.path.join(data_path,'logindata.yaml')))\n    def test_01_login(self,caseinfo):\n        \"\"\"\n        lp.get_except_result()实际结果\n        后面的是预期结果\n        :return:\n        \"\"\"\n        lp = LoginPage()\n        lp.login_xuxin(caseinfo['username'],caseinfo['password'])\n        print(lp.get_except_result())\n        try:\n>           assert lp.get_except_result() == caseinfo['result']\nE           AssertionError: assert '退出登入' == '退出登入1'\nE             - 退出登入1\nE             ?     -\nE             + 退出登入\n\ntestcases\\test_login.py:29: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"\n        lp.get_except_result()实际结果\n        后面的是预期结果\n        :return:\n        ","status":"failed","statusMessage":"AssertionError: assert '退出登入' == '退出登入1'\n  - 退出登入1\n  ?     -\n  + 退出登入","statusTrace":"self = <test_login.TestLogin object at 0x0000024970AFB710>\ncaseinfo = {'name': '登录账户02', 'password': 123456, 'result': '退出登入1', 'username': 'Single'}\n\n    @allure.severity('critical')  # 用例等级\n    @allure.title('登录测试用例1')  # 测试用例标题\n    @pytest.mark.parametrize(\"caseinfo\",read_yaml2(os.path.join(data_path,'logindata.yaml')))\n    def test_01_login(self,caseinfo):\n        \"\"\"\n        lp.get_except_result()实际结果\n        后面的是预期结果\n        :return:\n        \"\"\"\n        lp = LoginPage()\n        lp.login_xuxin(caseinfo['username'],caseinfo['password'])\n        print(lp.get_except_result())\n        try:\n            assert lp.get_except_result() == caseinfo['result']\n        except AssertionError as e:\n            log.info(\"断言错误\")\n>           raise e\n\ntestcases\\test_login.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_login.TestLogin object at 0x0000024970AFB710>\ncaseinfo = {'name': '登录账户02', 'password': 123456, 'result': '退出登入1', 'username': 'Single'}\n\n    @allure.severity('critical')  # 用例等级\n    @allure.title('登录测试用例1')  # 测试用例标题\n    @pytest.mark.parametrize(\"caseinfo\",read_yaml2(os.path.join(data_path,'logindata.yaml')))\n    def test_01_login(self,caseinfo):\n        \"\"\"\n        lp.get_except_result()实际结果\n        后面的是预期结果\n        :return:\n        \"\"\"\n        lp = LoginPage()\n        lp.login_xuxin(caseinfo['username'],caseinfo['password'])\n        print(lp.get_except_result())\n        try:\n>           assert lp.get_except_result() == caseinfo['result']\nE           AssertionError: assert '退出登入' == '退出登入1'\nE             - 退出登入1\nE             ?     -\nE             + 退出登入\n\ntestcases\\test_login.py:29: AssertionError","steps":[{"name":"关闭注册页面：","time":{"start":1667995095359,"stop":1667995095682,"duration":323},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"点击切换语言：","time":{"start":1667995095682,"stop":1667995096113,"duration":431},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"点击中文简体：","time":{"start":1667995096113,"stop":1667995098109,"duration":1996},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"关闭注册页面：","time":{"start":1667995098109,"stop":1667995098493,"duration":384},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"点击登入：","time":{"start":1667995098494,"stop":1667995099002,"duration":508},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"切换到管理员登录：","time":{"start":1667995099003,"stop":1667995099440,"duration":437},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"输入用户名：","time":{"start":1667995099440,"stop":1667995100012,"duration":572},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"输入密码：","time":{"start":1667995100012,"stop":1667995100436,"duration":424},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"点击登录：","time":{"start":1667995100436,"stop":1667995100629,"duration":193},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"点击个人中心：","time":{"start":1667995100630,"stop":1667995101448,"duration":818},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"实际结果：","time":{"start":1667995101449,"stop":1667995101658,"duration":209},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"点击个人中心：","time":{"start":1667995101658,"stop":1667995101845,"duration":187},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"实际结果：","time":{"start":1667995101845,"stop":1667995101932,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":13},"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"GreaterWMS 仓库管理平台"},{"name":"feature","value":"登录页面"},{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"DESKTOP-B7JFFBJ"},{"name":"thread","value":"18024-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'name': '登录账户02', 'username': 'Single', 'password': 123456, 'result': '退出登入1'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1ec3a31e56892d3.json","parameterValues":["{'name': '登录账户02', 'username': 'Single', 'password': 123456, 'result': '退出登入1'}"]}